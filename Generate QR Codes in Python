###import
pip install qrcode[pil]
pip install opencv-python
import qrcode
from PIL import Image

###define the properties of qr code
#version — Accepts an integer from 1 to 40 which controls the size of the QR Code. The smallest version 1 has a dimension of 21 x 21.
#box_size — Determines the number of pixels for each box of the QR code.
#border — Determines the thickness of the border of the boxes. The default value is 4, which is the minimum size.
#error_correction — Controls the error correction used. It will be further explained in the next paragraph.
#ERROR_CORRECT_L — About 7% or fewer errors can be corrected.
#ERROR_CORRECT_M — About 15% or fewer errors can be corrected. This is the default value.
#ERROR_CORRECT_Q — About 25% or fewer errors can be corrected.
#ERROR_CORRECT_H — About 30% or fewer errors can be corrected.
qr = qrcode.QRCode(
    version=1,
    error_correction=qrcode.constants.ERROR_CORRECT_H,
    box_size=10,
    border=4,
)

###info inside the qr code, background color
qr.add_data('https://www.cal-royal.com/')
qr.make(fit=True)
img = qr.make_image(fill_color="black", back_color="white").convert('RGB')

###output the qr code
img.save("G:/sample.png")

###Overlay an image on a QR Code, method 1
# Now open that png image to put the logo
logo_display = Image.open('G:/Becca/logo.png')
# How big the logo we want to put in the qr code png, width, height
logo_display.thumbnail((180, 150))
# resize the logo as calculated
logo_pos = ((img.size[0] - logo_display.size[0]) // 2, (img.size[1] - logo_display.size[1]) // 2)
# put the logo in the qr code
img.paste(logo_display, logo_pos)
#output the qr code
img.save("G:/sample1.png")

###Overlay an image on a QR Code, method 2
# Now open that png image to put the logo
img = Image.open("G:/company website.png")
width, height = img.size
# How big the logo we want to put in the qr code png
logo_size = 180
# Open the logo image
logo = Image.open('G:/Becca/logo.png')
# Calculate xmin, ymin, xmax, ymax to put the logo
xmin = ymin = int((width/2) - (logo_size/2))
xmax = ymax = int((width/2) + (logo_size/2))
# resize the logo as calculated
logo = logo.resize((xmax - xmin, ymax - ymin))
# put the logo in the qr code
img.paste(logo, (xmin, ymin, xmax, ymax))
#output the qr code
img.save("G:/sample2.png")
